#include <include/common.almfx>

#define PI 3.141592f
#define TwoPI (2.0f * PI)

RWTexture2DArray<float4> cubemap : register(u0, space1);
Texture2D<float4> equirectangular : register(t0, space1);
SamplerState linersampler : register(s0, space1);

[numthreads(32, 32, 1)]
void MainCS(uint3 tid : SV_DispatchThreadID)
{
    uint dstWidth, dstHeight, levelCount;
    cubemap.GetDimensions(dstWidth, dstHeight, levelCount);
    
    float2 st = float2(tid.x, tid.y) / float2(dstWidth, dstHeight);
    float2 uv = float2(st.x, 1 - st.y) * 2.0f - 1.0f;

    float3 cubeSample;
    if (tid.z == 0) { cubeSample = float3( 1.0,  uv.y, -uv.x); }
    else if (tid.z == 1) { cubeSample = float3(-1.0,  uv.y,  uv.x); }
    else if (tid.z == 2) { cubeSample = float3( uv.x,  1.0, -uv.y); }
    else if (tid.z == 3) { cubeSample = float3( uv.x, -1.0,  uv.y); }
    else if (tid.z == 4) { cubeSample = float3( uv.x,  uv.y,  1.0); }
    else { cubeSample = float3(-uv.x,  uv.y, -1.0); }
    
    cubeSample = normalize(cubeSample);
    
    float2 texel = float2(atan2(cubeSample.z, cubeSample.x), asin(cubeSample.y));
    texel *= float2(1.0f / TwoPI, 1.0f / PI);
    texel += 0.5f;

    cubemap[tid] = equirectangular.SampleLevel(linersampler, texel, 0);
}